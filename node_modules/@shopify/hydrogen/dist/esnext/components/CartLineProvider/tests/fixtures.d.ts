import { CurrencyCode } from '../../../storefront-api-types.js';
import { CartFragmentFragment } from '../../CartProvider/graphql/CartFragment.js';
export declare const CART_LINE: {
    attributes: {
        key: string;
        value: string;
    }[];
    quantity: number;
    id: string;
    merchandise: {
        id: string;
        availableForSale: boolean;
        priceV2: {
            amount: string;
            currencyCode: CurrencyCode;
        };
        product: {
            handle: string;
            title: string;
        };
        requiresShipping: boolean;
        selectedOptions: {
            name: string;
            value: string;
        }[];
        title: string;
    };
    cost: {
        totalAmount: {
            amount: string;
            currencyCode: CurrencyCode;
        };
        compareAtAmount: {
            amount: string;
            currencyCode: CurrencyCode;
        };
    };
};
export declare function getCartLineMock(options?: Partial<CartFragmentFragment['lines']['edges'][0]['node']>): {
    __typename?: "CartLine" | undefined;
    id: string;
    quantity: number;
    attributes: ({
        __typename?: "Attribute" | undefined;
    } & Pick<import("../../../storefront-api-types.js").Attribute, "key" | "value">)[] | {
        key: string;
        value: string;
    }[];
    cost: ({
        __typename?: "CartLineCost" | undefined;
    } & {
        totalAmount: {
            __typename?: "MoneyV2" | undefined;
        } & Pick<import("../../../storefront-api-types.js").MoneyV2, "currencyCode" | "amount">;
        compareAtAmountPerQuantity?: import("../../../storefront-api-types.js").Maybe<{
            __typename?: "MoneyV2" | undefined;
        } & Pick<import("../../../storefront-api-types.js").MoneyV2, "currencyCode" | "amount">> | undefined;
    }) | {
        totalAmount: {
            amount: string;
            currencyCode: CurrencyCode;
        };
        compareAtAmount: {
            amount: string;
            currencyCode: CurrencyCode;
        };
    };
    merchandise: {
        id: string;
        availableForSale: boolean;
        priceV2: {
            amount: string;
            currencyCode: CurrencyCode;
        };
        product: {
            handle: string;
            title: string;
        };
        requiresShipping: boolean;
        selectedOptions: {
            name: string;
            value: string;
        }[];
        title: string;
    };
};
