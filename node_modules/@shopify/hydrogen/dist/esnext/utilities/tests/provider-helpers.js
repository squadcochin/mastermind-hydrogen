import React from 'react';
import { DEFAULT_COUNTRY, DEFAULT_LANGUAGE } from '../../foundation/constants.js';
import { ShopifyProvider } from '../../foundation/ShopifyProvider/ShopifyProvider.server.js';
import { BrowserRouter } from '../../foundation/Router/BrowserRouter.client.js';
import { ServerPropsProvider, } from '../../foundation/ServerPropsProvider/ServerPropsProvider.js';
import { CartContext } from '../../components/CartProvider/context.js';
import { CART_ACTIONS } from '../../components/CartProvider/tests/fixtures.js';
export function ShopifyTestProviders({ children, setServerProps = (() => { }), serverProps = { pathname: '', search: '' }, shopifyConfig, history, }) {
    const finalShopifyConfig = getShopifyConfig(shopifyConfig);
    return (React.createElement(ServerPropsProvider, { setServerPropsForRsc: setServerProps, initialServerProps: serverProps, setRscResponseFromApiRoute: () => { } },
        React.createElement(ShopifyProvider, { shopifyConfig: finalShopifyConfig, languageCode: "EN", countryCode: "US" },
            React.createElement(BrowserRouter, { history: history }, children))));
}
export function CartTestProviders({ children, cartProviderValues, }) {
    const finalValue = getCartProviderValues(cartProviderValues);
    return (React.createElement(CartContext.Provider, { value: finalValue }, children));
}
export function getShopifyConfig(config = {}) {
    const languageCode = config.defaultLanguageCode ?? DEFAULT_LANGUAGE;
    const countryCode = config.defaultCountryCode ?? DEFAULT_COUNTRY;
    return {
        countryCode: countryCode.toUpperCase(),
        languageCode: languageCode.toUpperCase(),
        storeDomain: config.storeDomain ?? 'notashop.myshopify.io',
        storefrontToken: config.storefrontToken ?? 'abc123',
        storefrontApiVersion: config.storefrontApiVersion ?? '2022-07',
    };
}
function getCartProviderValues({ cart = {}, ...config } = {}) {
    const finalConfig = {
        ...CART_ACTIONS,
        ...cart,
        ...config,
    };
    return finalConfig;
}
