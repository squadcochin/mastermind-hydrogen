import React from 'react';
import { BrowserHistory } from 'history';
import { ShopifyConfig } from '../../types.js';
import { LocationServerProps, ServerProps } from '../../foundation/ServerPropsProvider/ServerPropsProvider.js';
import { type CartWithActions, type Cart } from '../../components/CartProvider/types.js';
export declare function ShopifyTestProviders({ children, setServerProps, serverProps, shopifyConfig, history, }: ShopifyProviderOptions & {
    children: React.ReactNode;
}): JSX.Element;
export declare function CartTestProviders({ children, cartProviderValues, }: {
    children: React.ReactNode;
    cartProviderValues?: Parameters<typeof getCartProviderValues>[0];
}): JSX.Element;
export declare function getShopifyConfig(config?: Partial<ShopifyConfig>): {
    countryCode: string;
    languageCode: string;
    storeDomain: string;
    storefrontToken: string;
    storefrontApiVersion: string;
};
declare function getCartProviderValues({ cart, ...config }?: CartProviderOptions): CartWithActions;
declare type SetServerProps = React.Dispatch<React.SetStateAction<ServerProps>>;
export interface ShopifyProviderOptions {
    shopifyConfig?: Partial<ShopifyConfig>;
    setServerProps?: SetServerProps;
    serverProps?: LocationServerProps;
    history?: BrowserHistory;
}
declare type CartProviderOptions = {
    cart?: Partial<Cart>;
} & Partial<CartWithActions>;
export {};
