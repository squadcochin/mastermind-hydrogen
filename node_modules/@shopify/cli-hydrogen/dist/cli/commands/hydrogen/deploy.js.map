{"version":3,"file":"deploy.js","sourceRoot":"","sources":["../../../../src/cli/commands/hydrogen/deploy.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,aAAa,EAAC,MAAM,gBAAgB,CAAA;AAC5C,OAAO,EAAC,cAAc,EAAC,MAAM,0BAA0B,CAAA;AACvD,OAAO,EAAC,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,IAAI,EAAC,MAAM,kBAAkB,CAAA;AAC/D,OAAO,OAAO,MAAM,oCAAoC,CAAA;AACxD,OAAO,EAAC,KAAK,EAAC,MAAM,aAAa,CAAA;AAEjC,MAAM,CAAC,OAAO,OAAO,MAAO,SAAQ,OAAO;IA2ClC,KAAK,CAAC,GAAG;QACd,MAAM,SAAS,GAAG,MAAM,WAAW,CAAC,KAAK,CAAC,SAAS,EAAE,CAAA;QACrD,IAAI,CAAC,SAAS,EAAE;YACd,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAA;YACrC,OAAM;SACP;QAED,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;QACxC,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAA;QAEjE,MAAM,cAAc,CAAC,EAAC,GAAG,KAAK,EAAE,IAAI,EAAE,GAAG,EAAC,CAAC,CAAA;IAC7C,CAAC;;AArDM,kBAAW,GAAG,4CAA4C,CAAA;AAC1D,aAAM,GAAG,IAAI,CAAA;AAEb,YAAK,GAAG;IACb,GAAG,GAAG,CAAC,WAAW;IAClB,GAAG,aAAa;IAChB,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC;QAC5B,QAAQ,EAAE,IAAI;QACd,GAAG,EAAE,wCAAwC;QAC7C,WAAW,EAAE,uCAAuC;KACrD,CAAC;IACF,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC;QAC1B,GAAG,EAAE,sCAAsC;QAC3C,WAAW,EAAE,0CAA0C;KACxD,CAAC;IACF,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC;QACzB,GAAG,EAAE,qCAAqC;QAC1C,WAAW,EAAE,yCAAyC;KACvD,CAAC;IACF,WAAW,EAAE,KAAK,CAAC,MAAM,CAAC;QACxB,MAAM,EAAE,IAAI;QACZ,GAAG,EAAE,qCAAqC;QAC1C,WAAW,EAAE,oDAAoD;KAClE,CAAC;IACF,WAAW,EAAE,KAAK,CAAC,OAAO,CAAC;QACzB,GAAG,EAAE,oCAAoC;QACzC,OAAO,EAAE,IAAI;QACb,WAAW,EAAE,wDAAwD;KACtE,CAAC;IACF,SAAS,EAAE,KAAK,CAAC,OAAO,CAAC;QACvB,IAAI,EAAE,GAAG;QACT,GAAG,EAAE,kCAAkC;QACvC,OAAO,EAAE,KAAK;QACd,WAAW,EAAE,4FAA4F;KAC1G,CAAC;IACF,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC;QAC1B,MAAM,EAAE,IAAI;QACZ,GAAG,EAAE,sCAAsC;QAC3C,OAAO,EAAE,6BAA6B;KACvC,CAAC;CACH,CAAA","sourcesContent":["import {hydrogenFlags} from '../../flags.js'\nimport {deployToOxygen} from '../../services/deploy.js'\nimport {output, cli, environment, path} from '@shopify/cli-kit'\nimport Command from '@shopify/cli-kit/node/base-command'\nimport {Flags} from '@oclif/core'\n\nexport default class Deploy extends Command {\n  static description = 'Deploy your Hydrogen app to Oxygen hosting'\n  static hidden = true\n\n  static flags = {\n    ...cli.globalFlags,\n    ...hydrogenFlags,\n    deploymentToken: Flags.string({\n      required: true,\n      env: 'SHOPIFY_HYDROGEN_FLAG_DEPLOYMENT_TOKEN',\n      description: 'Specify your Oxygen deployment token.',\n    }),\n    commitMessage: Flags.string({\n      env: 'SHOPIFY_HYDROGEN_FLAG_COMMIT_MESSAGE',\n      description: 'Override the default Git commit message.',\n    }),\n    commitAuthor: Flags.string({\n      env: 'SHOPIFY_HYDROGEN_FLAG_COMMIT_AUTHOR',\n      description: 'Override the default Git commit author.',\n    }),\n    pathToBuild: Flags.string({\n      hidden: true,\n      env: 'SHOPIFY_HYDROGEN_FLAG_PATH_TO_BUILD',\n      description: 'Skip build process and use provided value as build',\n    }),\n    healthCheck: Flags.boolean({\n      env: 'SHOPIFY_HYDROGEN_FLAG_HEALTH_CHECK',\n      default: true,\n      description: 'Require a health check before the deployment succeeds.',\n    }),\n    assumeYes: Flags.boolean({\n      char: 'y',\n      env: 'SHOPIFY_HYDROGEN_FLAG_ASSUME_YES',\n      default: false,\n      description: 'Automatic yes to prompts. Assume \"yes\" as answer to all prompts and run non-interactively.',\n    }),\n    oxygenAddress: Flags.string({\n      hidden: true,\n      env: 'SHOPIFY_HYDROGEN_FLAG_OXYGEN_ADDRESS',\n      default: 'oxygen-dms.shopifycloud.com',\n    }),\n  }\n\n  public async run(): Promise<void> {\n    const isShopify = await environment.local.isShopify()\n    if (!isShopify) {\n      output.warn('Command coming soon...')\n      return\n    }\n\n    const {flags} = await this.parse(Deploy)\n    const dir = flags.path ? path.resolve(flags.path) : process.cwd()\n\n    await deployToOxygen({...flags, path: dir})\n  }\n}\n"]}